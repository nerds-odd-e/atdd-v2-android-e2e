buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.4")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

ext {
    set('springCloudVersion', "2020.0.2")
    set('jfactory', '0.1.0')
    set('jfactoryCucumber', '0.1.2')
    set('jfactoryRepoJpa', '0.1.2')
    set('jsonAssertExtendComparator', '0.1.13')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    testAnnotationProcessor('org.projectlombok:lombok:1.18.18')
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    testImplementation('org.projectlombok:lombok:1.18.18')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.boot:spring-boot-starter-data-jpa")
    testImplementation("mysql:mysql-connector-java:8.0.13")
    testImplementation group: 'io.appium', name: 'java-client', version: '7.5.1'
    testImplementation("io.cucumber:cucumber-java:6.10.2")
    testImplementation("io.cucumber:cucumber-spring:6.10.2")
    testImplementation("org.assertj:assertj-core:3.19.0")
    testImplementation "org.awaitility:awaitility:4.0.3"
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.11.4'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4'
}

task cucumber(type: JavaExec) {
    dependsOn assemble, testClasses
    main = "io.cucumber.core.cli.Main"
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    args = ['--plugin', 'pretty',
            '--glue', 'com.odde.atddv2',
            'src/test/resources']
}

tasks.bootJar { enabled = false }